[Unit]
Description=Container API Proxy (unix socket to tcp port) based on Haproxy
After=container-build@%N.service container-secrets.service podman.service
Wants=container-build@%N.service container-secrets.service podman.service
ConditionPathExists=/etc/containers/systemd/%N.cfg

# upstream socket: a running docker compatible API Server under API_SOCKET
# downstream tcp: self.internal:API_PORT

[Container]
Image=localhost/%N:latest

# EnvironmentFile=-/etc/containers/environment/%N.env
# Enable CONTAINERS, so traefik can get labels for frontend router configuration
Environment=CONTAINERS=1
Environment=API_PORT=2375
# avoid legacy docker.sock
Environment=API_SOCKET=/run/podman/podman.sock
# Environment=LOG_LEVEL=debug

# disable selinux labels for accessing podman.sock
PodmanArgs=--security-opt label=disable
Volume=/run/podman/podman.sock:/run/podman/podman.sock
Volume=/etc/containers/systemd/%N.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro

# publish filtered api to [hostip:]hostPort:containerPort
{% macro cidr2ip(cidr) %}{{ cidr|regex_replace ('([^/]+)/.+', '\\1') }}{% endmacro %}
PublishPort={{ cidr2ip(INTERNAL_CIDR) }}:2375:2375

[Service]
Restart=on-failure

[Install]
WantedBy=multi-user.target

