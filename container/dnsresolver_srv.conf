# Custom options added in the **server**: clause part of 'unbound.conf'
# This file is placed _inside_ the server: clause with an include: statement.
# Do not start other clauses here, Use 'unbound_ext.conf' to start new clauses.

{% macro cidr2ip(cidr) %}{{ cidr|regex_replace ('([^/]+)/.+', '\\1') }}{% endmacro %}

private-address: 10.0.0.0/8
private-address: 100.64.0.0/10
private-address: 169.254.0.0/16
private-address: 172.16.0.0/12
private-address: 192.168.0.0/16
private-address: fc00::/7
private-address: fe80::/10

access-control: 127.0.0.0/8 allow
access-control: ::1/128 allow
access-control: fe80::/10 allow

# allow internal and podman bridge access to unbound
access-control: {{ INTERNAL_CIDR }} allow
access-control: {{ PODMAN_CIDR }} allow

# define local zone ".internal"
local-zone: 'internal.' static
local-data: 'internal. IN A {{ cidr2ip(INTERNAL_CIDR) }}'
local-data: 'dns.internal. IN A {{ cidr2ip(INTERNAL_CIDR) }}'
local-data: 'self.internal. IN A {{ cidr2ip(INTERNAL_CIDR) }}'
local-data: '_dns.internal. IN SVCB 1 dns.internal alpn=dot port=853'

# define local zone ".podman"
local-zone: 'podman.' static
local-data: 'podman. IN A {{ cidr2ip(PODMAN_CIDR) }}'
local-data: 'self.podman. IN A {{ cidr2ip(PODMAN_CIDR) }}'
local-data: '_dns.podman. IN SVCB 1 dns.internal alpn=dot port=853'

## hint participants to the also available dns over tls service
local-data: '_dns.resolver.arpa.  IN SVCB 1 dns.internal alpn=dot port=853'

# define reverse lookup entries
local-data-ptr: '{{ cidr2ip(INTERNAL_CIDR) }} self.internal.'
local-data-ptr: '{{ cidr2ip(PODMAN_CIDR) }} self.podman.'

## A Record
# local-data: "somecomputer.local. A 192.168.1.1"
## PTR Record
# local-data-ptr: "192.168.1.1 somecomputer.local."

