# /etc/knot/knot.conf

server:
  rundir: /run/knot
  user: knot:knot
  # listen to knot.internal@53
  listen: "{{ INTERNAL_CIDR|cidr2ip(1) }}@53"

log:
- target: syslog
  any: info              

database:
  storage: /var/lib/knot

# remote resolver to check for parent DS record updates, can be own resolver or public one.
remote:
- id: validating_resolver
  # Quad9, or any other trusted validating resolver
  address: 9.9.9.9

submission:
- id: parent_ds_check
  parent: validating_resolver
  check-interval: 1h

policy:
- id: internal_signing
  # used for internal domains, no ksk rollover
  algorithm: ecdsap256sha256
  # KSK lifetime to infinite (project) lifetime
  ksk-lifetime: 0
  zsk-lifetime: 30d
  rrsig-lifetime: 7d
  nsec3: off
- id: public_signing
  # could be used for external domains, usual 1 year ksk rollover and CDS/CDNKEY publishing
  algorithm: ecdsap256sha256
  # KSK lifetime of 1 year
  ksk-lifetime: 365d
  zsk-lifetime: 30d
  rrsig-lifetime: 7d
  # Enable NSEC3 for zone privacy
  nsec3: on
  # Enable automatic publication of CDS/CDNSKEY records
  cds-cdnskey-publish: always
  # Link the policy to the submission check configuration
  ksk-submission: parent_ds_check  
{% if "POLICY" in LOCAL_DNS_SERVER %}
{{ LOCAL_DNS_SERVER["POLICY"] }}
{% endif %}

template:
- id: default
  # storage: /var/lib/knot
  semantic-checks: on
  serial-policy: unixtime
  # zonefile-sync: -1 do not touch source zone files, keep dnssec and ddns entries in journal
  zonefile-sync: -1
  # difference-no-serial: ignore serial, only look if file has changed
  zonefile-load: difference-no-serial
  journal-content: all
  file: '%s.zone'
  # enable dnssec with policy
  dnssec-signing: on
  dnssec-policy: internal_signing
{% if "TEMPLATE" in LOCAL_DNS_SERVER %}
{{ LOCAL_DNS_SERVER["TEMPLATE"] }}
{% endif %}

key:
- id: transfer_internal
  algorithm: hmac-sha256
  secret: ${transfer_internal}
- id: update_internal
  algorithm: hmac-sha256
  secret: ${update_internal}
- id: acme_update_internal
  algorithm: hmac-sha256
  secret: ${acme_update_internal}
- id: notify_internal
  algorithm: hmac-sha256
  secret: ${notify_internal}
{% if "KEY" in LOCAL_DNS_SERVER %}
{{ LOCAL_DNS_SERVER["KEY"] }}
{% endif %}

acl:
- id: notify_internal_acl
  key: notify_internal
  action: notify
- id: transfer_internal_acl
  key: transfer_internal
  action: transfer
- id: update_internal_acl
  key: update_internal
  action: update
- id: acme_update_internal_acl
  key: acme_update_internal
  action: update
  update-type: TXT
  update-owner: name
  update-owner-match: pattern
  update-owner-name: [{% for domain in LOCAL_ACME_SERVER['DOMAINS'] %}"acme-challenge.{{ domain }}.", "_acme-challenge.*.{{ domain }}."{% if not loop.last %}, {% endif %}{% endfor %}]
{% if "ACL" in LOCAL_DNS_SERVER %}
{{ LOCAL_DNS_SERVER["ACL"] }}
{% endif %}

zone:
- domain: internal
  file: /etc/local/knot/internal.zone
  acl: [notify_internal_acl, update_internal_acl, acme_update_internal_acl, transfer_internal_acl]
- domain: podman
  file: /etc/local/knot/podman.zone
  acl: [notify_internal_acl, update_internal_acl, transfer_internal_acl]
- domain: nspawn
  file: /etc/local/knot/nspawn.zone
  acl: [notify_internal_acl, update_internal_acl, transfer_internal_acl]
{% if "ZONE" in LOCAL_DNS_SERVER %}
{{ LOCAL_DNS_SERVER["ZONE"] }}
{% endif %}

