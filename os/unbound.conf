# unbound.conf
# based on https://github.com/openwrt/packages/tree/master/net/unbound/files
# based on https://github.com/Mailu/Mailu/blob/master/optional/unbound

server:
  username: unbound
  directory: "/var/lib/unbound"
  chroot: ""

  # use system dns root anchor bundle
  auto-trust-anchor-file: "/var/lib/unbound/root.key"
  # use our own dns root anchors too
  trust-anchor-file: "/etc/local/ksk-anchor-internal.key"

  # use system ssl cert bundle at /etc/ssl/certs/ca-certificates.crt
  tls-system-cert: yes
  # and our own ca bundle at /etc/ssl/certs/root_bundle.crt
  tls-cert-bundle: "/etc/ssl/certs/root_bundle.crt"

  # make unbound respond via tls on tls_port
  tls-service-key: "/etc/ssl/private/server.key"
  tls-service-pem: "/etc/ssl/certs/server.crt"

  do-daemonize: no
  use-syslog: no
  verbosity: {{ "0" if "VERBOSITY" not in DNS_RESOLVER else DNS_RESOLVER["VERBOSITY"] }}
  extended-statistics: yes

  # listen to localhost and dns.internal
  interface: 127.0.0.1
  interface: ::1
  interface: {{ INTERNAL_CIDR|cidr2ip }}

  edns-buffer-size: 1232
  port: 53
  tls-port: 853
  outgoing-port-permit: 10240-65535
  do-ip4: yes
  do-ip6: no
  do-udp: yes
  do-tcp: yes
  prefer-ip4: yes
  prefer-ip6: no

  harden-dnssec-stripped: yes
  val-clean-additional: yes
  ignore-cd-flag: yes
  module-config: "validator iterator"

  qname-minimisation: no
  aggressive-nsec: yes
  prefetch-key: yes
  prefetch: yes
  target-fetch-policy: "3 2 1 0 0"

  cache-min-ttl: 120
  cache-max-ttl: 72000
  cache-max-negative-ttl: 600
  val-bogus-ttl: 300
  infra-host-ttl: 900

  hide-identity: yes
  hide-version: yes

  do-not-query-localhost: no

  # allow localhost access to unbound
  access-control: 127.0.0.0/8 allow
  access-control: ::1/128 allow
  access-control: fe80::/10 allow

  # allow internal, podman, nspawn and podman_pool access to unbound
  access-control: {{ INTERNAL_CIDR }} allow
  access-control: {{ PODMAN_CIDR }} allow
  access-control: {{ NSPAWN_CIDR }} allow
  access-control: {{ PODMAN_POOL_BASE }}.0.0/16 allow

  # define local zones .internal, .podman, .nspawn if local knot is not enabled
  {% if not LOCAL_DNS_SERVER["ENABLED"] %}

  # define local zone ".internal"
  local-zone: 'internal.' static
  local-data: 'internal. IN A {{ INTERNAL_CIDR|cidr2ip }}'
  local-data: 'dns.internal. IN A {{ INTERNAL_CIDR|cidr2ip }}'
  local-data: 'self.internal. IN A {{ INTERNAL_CIDR|cidr2ip }}'
  local-data: 'ca.internal. IN A {{ INTERNAL_CIDR|cidr2ip }}'
  local-data: 'acme.internal. IN A {{ INTERNAL_CIDR|cidr2ip(1) }}'
  local-data: 'knot.internal. IN A {{ INTERNAL_CIDR|cidr2ip(1) }}'
  local-data: '_dns.internal. IN SVCB 1 dns.internal alpn=dot port=853'
  local-data: 'this-is-only-in-unbound A {{ INTERNAL_CIDR|cidr2ip }}'

  # define local zone ".podman"
  local-zone: 'podman.' static
  local-data: 'podman. IN A {{ PODMAN_CIDR|cidr2ip}}'
  local-data: 'dns.podman. IN A {{ INTERNAL_CIDR|cidr2ip }}'
  local-data: 'self.podman. IN A {{ PODMAN_CIDR|cidr2ip}}'
  local-data: '_dns.podman. IN SVCB 1 dns.podman alpn=dot port=853'

  # define local zone ".nspawn"
  local-zone: 'nspawn.' static
  local-data: 'nspawn. IN A {{ NSPAWN_CIDR|cidr2ip }}'
  local-data: 'dns.nspawn. IN A {{ INTERNAL_CIDR|cidr2ip }}'
  local-data: 'self.nspawn. IN A {{ NSPAWN_CIDR|cidr2ip }}'
  local-data: '_dns.nspawn. IN SVCB 1 dns.nspawn alpn=dot port=853'

  {% endif %}

  ## hint participants to the also available dns over tls service
  local-data: '_dns.resolver.arpa.  IN SVCB 1 dns.internal alpn=dot port=853'

  # define reverse lookup entries
  local-data-ptr: '{{ INTERNAL_CIDR|cidr2ip }} self.internal.'
  local-data-ptr: '{{ PODMAN_CIDR|cidr2ip}} self.podman.'
  local-data-ptr: '{{ NSPAWN_CIDR|cidr2ip }} self.nspawn.'

  # define private-domains, so private ip's are allowed to answer about this domains
  private-domain: internal.
  private-domain: podman.
  private-domain: nspawn.

  # Append all text from DNS.SRV if defined
  {% if "SRV" in DNS_RESOLVER %}
  {{ DNS_RESOLVER["SRV"]|indent(2) }}
  {% endif %}

# allow socket control interface
remote-control:
  control-enable: yes
  control-use-cert: no
  control-interface: "/run/unbound/control"

# define auth zones ".", "arpa.", "in-addr.arpa.", "ip6.arpa."
auth-zone:
  name: .
  master: lax.xfr.dns.icann.org
  master: iad.xfr.dns.icann.org
  url: https://www.internic.net/domain/root.zone
  fallback-enabled: yes
  for-downstream: no
  for-upstream: yes
  zonefile: root.zone

auth-zone:
  name: arpa.
  master: lax.xfr.dns.icann.org
  master: iad.xfr.dns.icann.org
  url: https://www.internic.net/domain/arpa.zone
  fallback-enabled: yes
  for-downstream: no
  for-upstream: yes
  zonefile: arpa.zone

auth-zone:
  name: in-addr.arpa.
  master: lax.xfr.dns.icann.org
  master: iad.xfr.dns.icann.org
  url: https://www.internic.net/domain/in-addr.arpa.zone
  fallback-enabled: yes
  for-downstream: no
  for-upstream: yes
  zonefile: in-addr.arpa.zone

auth-zone:
  name: ip6.arpa.
  master: lax.xfr.dns.icann.org
  master: iad.xfr.dns.icann.org
  url: https://www.internic.net/domain/ip6.arpa.zone
  fallback-enabled: yes
  for-downstream: no
  for-upstream: yes
  zonefile: ip6.arpa.zone

# forward zone entries for internal domains if local dns server knot is enabled
{% if LOCAL_DNS_SERVER["ENABLED"] %}
  {% for zone in ["internal", "podman", "nspawn"] %}
forward-zone:
  name: {{ zone }}
  forward-addr: {{ INTERNAL_CIDR|cidr2ip(1) }}@53
  {% endfor %}
{% endif %}

# addditional forward zone entries
{% if "FORWARD" in DNS_RESOLVER %}
  {% for zone in DNS_RESOLVER["FORWARD"] %}
forward-zone:
  name: {{ zone.name }}
  forward-first: no
  forward-addr: {{ zone.addr }}
  forward-tls-upstream: {{ "yes" if zone.tls is not defined else zone.tls }}
  {% endfor %}
{% endif %}

# upstream/forward configuration
forward-zone:
  name: .
  forward-first: yes
{% if "UPSTREAM" in DNS_RESOLVER %}
  forward-tls-upstream: {{ "yes" if ("UPSTREAM_TLS" in DNS_RESOLVER and DNS_RESOLVER["UPSTREAM_TLS"]) else "no" }}
  {% for addr in DNS_RESOLVER["UPSTREAM"] %}
  forward-addr: {{ addr }}
  {% endfor %}
{% else %}
  forward-tls-upstream: yes
  # round robin (2x google, 2x adguard, 2xcloudflare) lookup using tls to split history
  forward-addr: 8.8.4.4@853#dns.google
  forward-addr: 8.8.8.8@853#dns.google
  forward-addr: 94.140.14.140@853#dns-unfiltered.adguard.com
  forward-addr: 94.140.14.141@853#dns-unfiltered.adguard.com
  forward-addr: 1.1.1.1@853#cloudflare-dns.com
  forward-addr: 1.0.0.1@853#cloudflare-dns.com
{% endif %}

# Append all text from DNS_RESOLVER.EXTRA if defined
{% if "EXTRA" in DNS_RESOLVER %}
{{ DNS_RESOLVER["EXTRA"] }}
{% endif %}

