# Jinja Default Environment
# HOSTNAME: will be set to hostname from Butanetranspiler(resource_name, hostname, ...

# Default locale (lang, keymap, timezone, country_code)
LOCALE:
  LANG: en_US.UTF-8
  KEYMAP: us
  TIMEZONE: UTC
  COUNTRY_CODE: UN

# DNS Upstream Resolver for internal unbound dns server that serves to system, container and nspawn workloads
DNS_RESOLVER:
  # VERBOSITY: 0, 1, 2, 3, 4, > more verbose
  VERBOSITY: "1"
  # UPSTREAM_TLS: boolean, defaults: true
  # UPSTREAM: list, defaults: None
  #   if undefined will be set to tls split upstream using 2x google, 2x adguard, 2xcloudflare
  #   example upstream list entry: - 1.2.3.4@567#dns.domain
  # FORWARD: list, defaults: None
  #   example forward list entry: - name: zone, addr: addr, tls: true/false
  # SRV: multiline-string, custom text appended to unbound.conf, placed _inside_ the server section
  #   eg. zone entries and public dns overrides
  # EXTRA: multiline-string, custom text appended to unbound.conf, start with new section

# FRONTEND:ENABLED true/false, if true traefik does tls termination and http routing
FRONTEND:
  ENABLED: true
  # VERBOSITY: TRACE, DEBUG, INFO, WARN, ERROR, FATAL, PANIC, < more verbose, uppercase matters!
  VERBOSITY: DEBUG
  # DASHBOARD: optional string, set to unique hostname eg. "traefik.host.domain" to enable traefik debug dashboard
  DASHBOARD:

# Dedicated DNS Server (Knot) for .internal, .podman, .nspawn and reverse ptr
LOCAL_DNS_SERVER:
  # if enabled:  unbound will forward .internal requests to knot to answer requests
  # if disabled: unbound will answer and deliver .internal requests itself, but without dnssec
  ENABLED: false
  # VERBOSITY: debug, info, notice. warning, error, critical, < more verbose
  VERBOSITY: info
  # # optional zones:
  #     place dns data into /etc/local/knot/<zonename>.zone
  # # optional entries:
  #     TEMPLATE, POLICY, KEY, ACL, ZONE
  #     multiline | string, must be formatted as list "-", will be added to defined section

# Dedicated ACME Certificate Server (step-ca) for *.on.internal
LOCAL_ACME_SERVER:
  # if enabled, step-ca will be used for maintaining on.internal TLS certificates, needs LOCAL_DNS_SERVER to be enabled too
  ENABLED: false
  # HOSTNAMES: list, under which hostnames acme provision will be available,
  HOSTNAMES:
  - acme.internal
  # DOMAINS: list, which domains are availabel for acme to provision on
  DOMAINS:
  - on.internal
  # - at.internal

FIREWALL:
  # VERBOSITY: 0, 1 > more verbose
  VERBOSITY: 1

# Additional RPM packets to be available
RPM_OSTREE_INSTALL:
  # unbound, used as recursive dnsresolver for system, container, compose and nspawn workloads
  - unbound
  # knot, used as authoritative DNS server for .internal, .podman, .nspawn domains
  - knot
  # podman-compose, used by compose.bu for compose container
  - podman-compose
  # systemd-networkd, used by nspawn.bu for nspawn container network setup
  - systemd-networkd
  # firewalld, use by firewall.bu for firewall rules
  - firewalld

# Network CIDR of Internal, Podman and Nspawn Networks
INTERNAL_CIDR: 10.87.240.1/24
NSPAWN_CIDR: 10.87.241.1/24
PODMAN_CIDR: 10.88.0.1/16
PODMAN_POOL_CIDR: 10.89.0.1/16
LIBVIRT_CIDR: 192.168.122.1/24

# DEBUG_CONSOLE_AUTOLOGIN: true/false, if true: add autologin on serial console
DEBUG_CONSOLE_AUTOLOGIN: false

# DEBUG_DISABLE_AUTOUPDATE: true/false, if true: Disable autoupdate to keep specific version
DEBUG_DISABLE_AUTOUPDATE: false

# list of /etc/credstore entries to load into podman for container and compose workloads
# default ("") means to load all secrets in /etc/credstore into podman secrets>
# example: PODMAN_LOAD_SECRETS: "root_ca.crt root_bundle.crt"
PODMAN_LOAD_SECRETS: ""
