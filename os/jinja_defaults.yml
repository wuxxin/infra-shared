# Jinja Default Environment

# HOSTNAME: will be set to hostname from Butanetranspiler(resource_name, hostname, ...

# Default locale (lang, keymap, timezone, country_code)
LOCALE:
  LANG: en_US.UTF-8
  KEYMAP: us
  TIMEZONE: UTC
  COUNTRY_CODE: UN

# FRONTEND:ENABLED true/false, if true traefik does tls termination and http routing
FRONTEND:
  ENABLED: true
  # DASHBOARD: optional string, set to uniqe hostname eg. "traefik.host.domain" to enable traefik debug dashboard
  DASHBOARD:

# DNS Resolver for system, container and nspawn workloads, see docs/dnsresolver.md
DNS_RESOLVER:
  VERBOSITY: "1"
  # UPSTREAM_TLS: boolean, defaults: true
  # UPSTREAM: list, defaults: None
  # if undefined will be set to tls split upstream using 2x google, 2x adguard, 2xcloudflare
  # # example upstream list entry: - 1.2.3.4@567#dns.domain
  # FORWARD: list, defaults: None
  # # example forward list entry: - name: zone, addr: addr, tls: true/false
  # SRV: multiline-string, custom text appended to unbound.conf, placed _inside_ the server section
  # # eg. zone entries and public dns overrides
  # EXTRA: multiline-string, custom text appended to unbound.conf, start with new section

# Dedicated DNS Server (Knot) for .internal
DNS_SERVER:
  # if enabled unbound will forward to knot for .internal requests, if disabled, unbound will deliver .internal itself
  ENABLED: true
  # # ZONE: multiline-string, additional ZONE entries for .internal knot server
  # ZONE: |
  # # KEY: multiline-string, additional TSIG Keys for .internal knot server
  # KEY: |

# Dedicated ACME Certificate Server (step-ca) for .on.internal
DNS_ACME_SERVER:
  # if enabled, step-ca will be used for maintaining on.internal TLS certificates, needs DNS_SERVER to be enabled too
  ENABLED: false

# Additional RPM packets to be available
RPM_OSTREE_INSTALL:
  # unbound, needed as recursive dnsresolver for system, container, compose and nspawn workloads
  - unbound
  # podman-compose, needed by compose.bu for compose container
  - podman-compose
  # systemd-networkd, needed by nspawn.bu for nspawn container network setup
  - systemd-networkd

# Network CIDR of Internal, Podman and Nspawn Network
INTERNAL_CIDR: 10.87.240.1/24
NSPAWN_CIDR: 10.87.241.1/24
PODMAN_CIDR: 10.88.0.1/16
# Podman subnetworks (x.x.0-255.y)
PODMAN_POOL_BASE: "10.89"

# DEBUG_CONSOLE_AUTOLOGIN: true/false, if true: add autologin on serial console
DEBUG_CONSOLE_AUTOLOGIN: false

# list of /etc/credstore entries to load into podman daemon for compose workloads
PODMAN_LOAD_SECRETS: "root_ca.crt root_bundle.crt"

