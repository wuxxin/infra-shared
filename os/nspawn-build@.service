[Unit]
Description=Build Nspawn Image %I
After=network-online.target unbound.service
Wants=network-online.target unbound.service
ConditionPathExists=/etc/systemd/nspawn/%i.nspawn
ConditionPathExists=/etc/nspawn/environment/%i.env
ConditionPathExists=/etc/nspawn/build/%i/nspawn.provision.sh

[Service]
Type=oneshot
RemainAfterExit=yes
EnvironmentFile=/etc/nspawn/environment/%i.env
# Environment NSPAWN_OSNAME must be set

# extract and merge filetree from base container to the machine directory
ExecStart=/usr/bin/bash -c 'set -eo pipefail; \
if test ! -d "/var/lib/machines/%i"; then \
  if ! podman image exists "localhost/$NSPAWN_OSNAME:latest"; then \
    systemctl start --wait "container-build@$NSPAWN_OSNAME"; \
    if ! podman image exists "localhost/$NSPAWN_OSNAME:latest"; then \
      echo "Error: image $NSPAWN_OSNAME not found"; \
      exit 1; \
    fi; \
  fi; \
  tmpdir=$(mktemp -d) || { echo "error: mktemp failed" >&2; exit 1; }; \
  echo "Export $NSPAWN_OSNAME for machine %i"; \
  podman save --compress --format docker-dir "localhost/$NSPAWN_OSNAME:latest" -o $tmpdir; \
  cd $tmpdir; mkdir -p $tmpdir/merged_fs; \
  for layerid in $(jq -r ".layers[].digest" manifest.json); do \
    layername="$(printf "$layerid" | sed -r "s/sha256:(.+)/\\1/g")"; \
    if test "$(printf "$layername" | tr -d " ")" != ""; then \
      echo "merge layer $layername"; \
      tar -xzf "$layername" -C merged_fs; \
    fi; \
  done; \
  echo "import tree into %i"; \
  cp -ar "$tmpdir/merged_fs" "/var/lib/machines/%i"; \
  rm -rf "$tmpdir"; \
  touch "/var/lib/machines/.%i.NEED.PROVISION"; \
fi \
'

[Install]
WantedBy=multi-user.target
