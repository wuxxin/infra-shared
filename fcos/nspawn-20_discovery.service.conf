[Unit]
# systemd-nspawn@.service.d/20_discovery.conf DropIn
After=unbound.service frontend.service
Wants=unbound.service

[Service]
# dns and frontend service discovery
# create entries on post start, remove on post stop

# StartPost
# extract ipaddr from machinectl, replace ##NSPAWN_IPADDR## in NSPAWN_TRAEFIK
# if unbound: update DNS via unbound-control local_data
# if frontend: cp service configuration to traefik

EnvironmentFile=/etc/nspawn/environment/%i.env

ExecStartPost=/usr/bin/bash -c 'set -eo pipefail; \
if test ! -e /etc/nspawn/environment/%i.env; then \
  echo "Error: missing /etc/nspawn/environment/%i.env for Machine %i"; exit 1; \
fi; \
while ! machinectl list -a --no-legend | grep -q "^%i"; do echo -n "."; sleep 1; done; \
while ! machinectl status "%i" | grep -q "State: running"; do sleep 1; done; \
echo "Sleeping 5 sec to be sure to get usable ip from machine %i"; sleep 5; \
IPADDR=$(machinectl list --no-pager --no-legend --max-addresses 1 -l | grep "%i" | sed -r "s/.+ ([^ ]+)$/\\1/g"); \
IPPTR=$(printf "$IPADDR." | tac -s. | sed -r "s/.$/.in-addr.arpa/"); \
echo "$IPADDR" > /etc/local/flags/%i.ipaddr; \
echo "$IPPTR" > /etc/local/flags/%i.ipptr; \
echo "adding machine %i.nspawn with ip $IPADDR to flags/%i.ippaddr and %i.ipptr"; \
if systemctl -q is-active unbound.service; then \
  echo "adding machine %i.nspawn to DNS"; \
  unbound-control local_data "%i.nspawn" A "$IPADDR"; \
  unbound-control local_data "$IPPTR" PTR "%i.nspawn"; \
else \
  echo "not adding machine %i.nspawn to DNS because unbound is not running"; \
fi; \
TRAEFIK_YML=$(echo "${NSPAWN_TRAEFIK}"); \
touch /etc/local/frontend/%i.yml; \
if ! diff -q <(echo "$TRAEFIK_YML") /etc/local/frontend/%i.yml; then \
  echo "updating machine %i ($IPADDR) frontend config"; \
  echo "$TRAEFIK_YML" > /etc/local/frontend/%i.yml; \
  if systemctl -q is-active frontend.service; then \
    echo "copy new config to running frontend"; \
    podman cp /etc/local/frontend/%i.yml "systemd-frontend:/traefik/%i.yml"; \
  else \
    echo "not copying new config to frontend, because frontend is not running"; \
  fi; \
else \
    echo "machine %i ($IPADDR) already added and identical"; \
fi'

# StopPost
# if unbound: use unbound-control to remove DNS local_data
# if frontend: post empty string to discoveryfile so service is seen as removed by traefik

ExecStopPost=/usr/bin/bash -c 'set -eo pipefail; \
if systemctl -q is-active unbound.service; then \
  echo "removing machine %i from DNS"; \
  unbound-control local_data_remove "%i.nspawn"; \
  if test -e /etc/local/flags/%i.ipptr; then \
    IPPTR=$(cat /etc/local/flags/%i.ipptr); \
    unbound-control local_data_remove "$IPPTR"; \
  fi; \
else \
  echo "not removing machine %i from DNS because unbound is not running"; \
fi'

ExecStopPost=/usr/bin/bash -c 'set -eo pipefail; \
echo "removing machine %i from DNS and frontend"; \
printf "" > /etc/local/frontend/%i.yml; \
if systemctl -q is-active frontend.service; then \
  echo "copy new config to running frontend"; \
  podman cp /etc/local/frontend/%i.yml "systemd-frontend:/traefik/%i.yml"; \
else \
  echo "not copying new config to frontend, because frontend is not running"; \
fi'

