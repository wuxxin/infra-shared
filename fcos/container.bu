# butane config

storage:
  directories:
    # standard podman quadlet container/volume/network configuration directory
    #   automatic service recognition if: {service}[.*].{container,volume,*}
    # - path: /etc/containers/systemd

    # our containers environment directory
    - path: /etc/containers/environment
      mode: 0700

    # our containers Containerfile directory
    - path: /etc/containers/build

    # our local frontend (traefik) configuration directory
    - path: /etc/local/frontend

  files:
    # copy apiproxy and frontend configuration
{% for f in ["apiproxy.container", "apiproxy.cfg",
    "frontend.container", "frontend.volume", "frontend.static.yml", "frontend.dynamic.yml"] %}
    - path: /etc/containers/systemd/{{ f }}
      contents:
        local: container/{{ f }}
        template: jinja
{% endfor %}

  trees:
    # copy apiproxy and frontend Containerfile
    - path: /etc/containers/build/apiproxy
      local: Containerfile/apiproxy

    - path: /etc/containers/build/frontend
      local: Containerfile/frontend

systemd:
  units:
    - name: container-build@.path
      contents_local: fcos/container-build@.path

    - name: container-build@.service
      contents_local: fcos/container-build@.service

    - name: frontend-post-up.service
      enabled: {{ "true" if WEB_FRONTEND else "false" }}
      contents: |
        [Unit]
        Description=Copy frontend.dynamic.yml into running container on every [re]start
        After=frontend.service
        Wants=frontend.service
        ConditionPathExists=/etc/containers/systemd/frontend.dynamic.yml

        [Service]
        Type=oneshot

        ExecStart=/usr/bin/bash -c 'set -eo pipefail; \
          if systemctl -q is-active frontend.service; then \
            podman cp /etc/containers/systemd/frontend.dynamic.yml \
              "systemd-frontend:/traefik/frontend.dynamic.yml"; \
          fi'

        ExecStop=true

        [Install]
        WantedBy=multi-user.target

