# butane config

storage:
  directories:
    # standard podman quadlet container/volume/network configuration directory
    #   automatic service recognition if: {service}[.*].{container,volume,*}
    # - path: /etc/containers/systemd

    # our containers environment directory
    - path: /etc/containers/environment
      mode: 0700

    # our containers Containerfile directory
    - path: /etc/containers/build

    # our local frontend (traefik) configuration directory
    - path: /etc/local/frontend

{% if WEB_FRONTEND|d(false) or DNS_RESOLVER|d(false) %}
  files:
  {% if WEB_FRONTEND|d(false) %}
    # copy apiproxy and frontend configuration
    {% for f in ["apiproxy.container", "apiproxy.cfg",
      "frontend.container", "frontend.volume", "frontend.static.yml", "frontend.dynamic.yml"] %}
    - path: /etc/containers/systemd/{{ f }}
      contents:
        local: container/{{ f }}
        template: jinja
    {% endfor %}
  {% endif %}

  {% if DNS_RESOLVER|d(false) %}
    # copy unbound dns-resolver configuration, can be overwritten later
    {% for f in ["dnsresolver.container", "dnsresolver.volume",
      "dnsresolver.conf",  "dnsresolver_srv.conf",  "dnsresolver_ext.conf",] %}
    - path: /etc/containers/systemd/{{ f }}
      contents:
        local: container/{{ f }}
        template: jinja
    {% endfor %}
  {% endif %}
{% endif %}

  trees:
    # unconditional copy containerfiles
{% for f in ["apiproxy", "frontend", "dnsresolver"] %}
    - path: /etc/containers/build/{{ f }}
      local: Containerfile/{{ f }}
{% endfor %}

systemd:
  units:
    - name: container-build@.path
      contents_local: fcos/container-build@.path

    - name: container-build@.service
      contents_local: fcos/container-build@.service

{% if WEB_FRONTEND|d(false) %}
    - name: frontend-post-up.service
      enabled: true
      contents: |
        [Unit]
        Description=Copy frontend.dynamic.yml into running container on every [re]start
        After=frontend.service
        Wants=frontend.service
        ConditionPathExists=/etc/containers/systemd/frontend.dynamic.yml

        [Service]
        Type=oneshot
        ExecStart=podman cp /etc/containers/systemd/frontend.dynamic.yml "systemd-frontend:/traefik/frontend.dynamic.yml"
        ExecStop=true

        [Install]
        WantedBy=multi-user.target

{% endif %}

